{"version":3,"file":"static/js/284.6629bcf9.chunk.js","mappings":"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","sources":["components/OpenAPIDisplay/parseOpenApiData.js","webpack://@kne-components/components-postcat/./src/components/OpenAPIDisplay/style.module.scss?ec25","components/OpenAPIDisplay/DataTable.js","components/OpenAPIDisplay/getParameterColumns.js","components/OpenAPIDisplay/Parameters.js","components/OpenAPIDisplay/getResponseColumns.js","components/OpenAPIDisplay/SchemaTable.js","components/OpenAPIDisplay/Request.js","components/OpenAPIDisplay/Responses.js","components/OpenAPIDisplay/OpenAPIDisplay.js"],"sourcesContent":["import transform from 'lodash/transform';\nimport get from 'lodash/get';\nimport omit from 'lodash/omit';\nimport isPlainObject from 'lodash/isPlainObject';\nimport {isEmpty, uniqueId} from \"lodash\";\n\nexport const transformSchemaToList = ({properties, required}) => Object.keys(properties).map((key) => {\n    const id = uniqueId(key);\n    const temp = {\n        name: key,\n        description: properties[key].description,\n        type: properties[key].type,\n        format: properties[key]?.format,\n        example: properties[key]?.example,\n        id,\n        required: !!(required || []).includes(key),\n    };\n    if (properties[key].type === \"object\" && properties[key]?.properties) {\n        return Object.assign({}, temp, {\n            children: transformSchemaToList({\n                properties: properties[key]?.properties, required: properties[key]?.required || [],\n            }),\n        });\n    } else if (properties[key].type === \"array\" && !isEmpty(properties[key].items)) {\n        return Object.assign({}, temp, {\n            children: transformSchemaToList({\n                properties: properties[key].items?.properties, required: properties[key].items?.required || [],\n            }),\n        });\n    } else {\n        temp.key = id;\n    }\n\n    return temp;\n});\n\nexport const transformSchemaComponents = (target, originData) => {\n    if (isPlainObject(target) && target.hasOwnProperty('schema') && target.schema.hasOwnProperty('$ref')) {\n        const schemaPath = target.schema.$ref.replace(/^#\\//, '').split('/');\n        return {schema: transformSchemaComponents(get(originData, schemaPath), originData)};\n    }\n\n    if (isPlainObject(target)) {\n        return transform(target, (res, value, key) => {\n            res[key] = transformSchemaComponents(value, originData);\n        }, {});\n    }\n\n    if (Array.isArray(target)) {\n        return target.map((item) => transformSchemaComponents(item, originData));\n    }\n\n    return target;\n};\n\nconst parseOpenApiData = (inputData) => {\n    return {\n        info: get(inputData, 'info', {}),\n        servers: get(inputData, 'servers', {}),\n        openapi: get(inputData, 'openapi'),\n        paths: transform(inputData.paths, (res, value, key) => {\n            res[key] = transform(transformSchemaComponents(value, inputData), (innerRes, innerValue, innerKey) => {\n                innerRes[innerKey] = {\n                    summary: get(innerValue, 'summary', ''),\n                    deprecated: get(innerValue, 'deprecated', false),\n                    description: get(innerValue, 'description', ''),\n                    tags: get(innerValue, 'tags', []),\n                    operationId: get(innerValue, 'operationId', ''),\n                    query: transform(get(innerValue, 'parameters', []), (res, value) => {\n                        if (get(value, 'in') === 'query') {\n                            res.push(omit(value, ['in']));\n                        }\n                    }, []),\n                    headers: transform(get(innerValue, 'parameters', []), (res, value) => {\n                        if (get(value, 'in') === 'header') {\n                            res.push(omit(value, ['in']));\n                        }\n                    }, []),\n                    requestBody: transform(get(innerValue, 'requestBody.content'), (res, value, key) => {\n                        res.push(Object.assign({}, value, {\n                            'content-type': key\n                        }));\n                    }, []),\n                    responses: transform(get(innerValue, 'responses'), (res, value, key) => {\n                        res.push(Object.assign({}, {\n                            content: transform(get(value, 'content', {}), (res, value, key) => {\n                                res.push(Object.assign({}, value, {type: key}));\n                            }, [])\n                        }, {statusCode: key, description: get(value, 'description', '')}));\n                    }, [])\n                };\n            }, {});\n        }, {})\n    };\n};\n\nexport default parseOpenApiData;\n","// extracted by mini-css-extract-plugin\nexport default {\"request-method\":\"style_request-method__i5WuB__9NGbh\",\"request-method-post\":\"style_request-method-post__GtwJB__9NGbh\",\"request-method-get\":\"style_request-method-get__9yHCj__9NGbh\",\"request-method-put\":\"style_request-method-put__wEgzb__9NGbh\",\"request-method-options\":\"style_request-method-options__0l2bP__9NGbh\",\"request-method-delete\":\"style_request-method-delete__gTjPA__9NGbh\",\"request-method-head\":\"style_request-method-head__fWDUx__9NGbh\",\"request-method-patch\":\"style_request-method-patch__xs0Km__9NGbh\",\"collapse-wrapper\":\"style_collapse-wrapper__W7jWX__9NGbh\",\"path-line\":\"style_path-line__Ukgxa__9NGbh\",\"header-info\":\"style_header-info__wuEcc__9NGbh\",\"menu-url\":\"style_menu-url__4rqrQ__9NGbh\",\"api-description\":\"style_api-description__Pa2ho__9NGbh\"};","import {createWithRemoteLoader} from \"@kne/remote-loader\";\nimport style from \"./style.module.scss\";\n\nconst DataTable = createWithRemoteLoader({\n    modules: [\"components-core:Table\", \"components-core:InfoPage.Collapse\"]\n})(({remoteModules, label, data, ...props}) => {\n    const [Table, Collapse] = remoteModules;\n    return <Collapse className={style[\"collapse-wrapper\"]}\n                     defaultActiveKey={['current']} items={[{\n        label, key: 'current', children: <Table {...props} sticky={false} dataSource={data}/>\n    }]}/>\n});\n\nexport default DataTable;\n","const getParameterColumns = () => {\n    return [{name: 'name', title: '参数名', type: 'mainInfo', hover: false, primary: false, fixed: 'left'}, {\n        name: 'type', title: '类型', type: 'other', valueOf: (item) => {\n            return `${item.schema.type}${item.schema.format ? `<${item.schema.format}>` : ''}`\n        }\n    }, {\n        name: 'required', title: '必填', type: 'singleRow', valueOf: (value, {name}) => {\n            return value[name]?.toString();\n        }\n    }, {\n        name: 'description', title: '说明', type: 'description'\n    }, {\n        name: 'example', title: '示例', type: 'description'\n    }];\n};\n\nexport default getParameterColumns;\n","import DataTable from \"./DataTable\";\nimport getParameterColumns from \"./getParameterColumns\";\n\nconst Parameters = ({data, ...props}) => {\n    return <DataTable {...props} data={data} columns={getParameterColumns()}/>\n};\n\nexport default Parameters;\n","const getDocumentDataColumns = () => {\n    return [{\n        name: 'name', title: '字段名', type: 'mainInfo', hover: false, primary: false, fixed: 'left'\n    }, {\n        name: 'type', title: '类型', type: 'other'\n    }, {\n        name: 'required', title: '必填', type: 'singleRow', valueOf: (value, {name}) => {\n            return value[name]?.toString();\n        }\n    }, {\n        name: 'description', title: '说明', type: 'description'\n    }, {\n        name: 'example', title: '示例', type: 'description'\n    }];\n};\n\nexport default getDocumentDataColumns;\n","import {transformSchemaToList} from './parseOpenApiData';\nimport getResponseColumns from \"./getResponseColumns\";\nimport DataTable from \"./DataTable\";\n\nconst SchemaTable = ({data, ...props}) => {\n    return <DataTable {...props} data={transformSchemaToList(data)} columns={getResponseColumns()}/>;\n};\n\nexport default SchemaTable;\n","import style from \"./style.module.scss\";\nimport Parameters from \"./Parameters\";\nimport SchemaTable from './SchemaTable';\nimport {Card} from 'antd';\n\nconst Request = ({data}) => {\n    return <Card title=\"Request\" size=\"small\" type=\"inner\" className={style[\"collapse-wrapper\"]}>\n        {data.headers && data.headers.length > 0 &&\n            <Parameters data={data.headers} rowKey=\"name\" label=\"Header Parameters\"/>}\n        {data.query && data.query.length > 0 && <Parameters data={data.query} rowKey=\"name\" label=\"Query Parameters\"/>}\n        {data.requestBody && data.requestBody.length > 0 &&\n            <Card title=\"Request Body\" size=\"small\" type=\"inner\" className={style[\"collapse-wrapper\"]} bordered={false}>\n                {data.requestBody.map((item) => {\n                    return <SchemaTable label={`content-type:${item['content-type']}`} key={item['content-type']}\n                                        data={item.schema}/>;\n                })}\n            </Card>}\n    </Card>;\n};\n\nexport default Request;\n","import {createWithRemoteLoader} from \"@kne/remote-loader\";\nimport {Card} from 'antd';\nimport style from \"./style.module.scss\";\nimport get from 'lodash/get';\nimport SchemaTable from './SchemaTable';\n\nconst Responses = createWithRemoteLoader({\n    modules: [\"components-core:InfoPage.Collapse\"]\n})(({remoteModules, data}) => {\n    const [Collapse] = remoteModules;\n    return <Card title=\"Responses\" size=\"small\" type=\"inner\" className={style[\"collapse-wrapper\"]}>\n        {<Collapse defaultActiveKey={get(data, [0, 'statusCode'])}\n                   items={data.map(({statusCode, description, content}) => {\n                       return {\n                           key: statusCode,\n                           label: `${statusCode} ${description}`,\n                           children: content.map(({type, schema}) => {\n                               return <SchemaTable label={type} key={type} data={schema}/>;\n                           })\n                       };\n                   })}/>}\n\n    </Card>\n});\n\nexport default Responses;\n","import {createWithRemoteLoader} from '@kne/remote-loader';\nimport {useMemo, useState} from 'react';\nimport uniq from 'lodash/uniq';\nimport {Row, Col, Space, Badge} from 'antd';\nimport style from './style.module.scss';\nimport classnames from \"classnames\";\nimport get from 'lodash/get';\nimport parseOpenApiData from './parseOpenApiData';\nimport Request from \"./Request\";\nimport Responses from \"./Responses\";\n\nexport const OpenAPIMenu = createWithRemoteLoader({\n    modules: ['components-core:Menu']\n})(({remoteModules, data, ...props}) => {\n    const [Menu] = remoteModules;\n    const menuList = useMemo(() => {\n        const output = [], mapping = {};\n        Object.keys(data.paths).forEach((path) => {\n            const api = Object.assign({}, data.paths[path])\n            Object.keys(api).forEach((method) => {\n                const item = Object.assign({}, api[method]);\n                const tags = item.tags || [];\n                output.push(...tags);\n                tags.forEach((tag) => {\n                    if (!mapping[tag]) {\n                        mapping[tag] = [];\n                    }\n                    mapping[tag].push({\n                        label: <>\n                            <span\n                                className={classnames(style['request-method'], style[`request-method-${method}`])}>{method.toUpperCase()}</span>\n                            <span className={style['menu-url']}>{path}</span>\n                        </>, key: `${path}-${method.toLowerCase()}`, data: {\n                            path, method\n                        }\n                    });\n                });\n            });\n        });\n        return uniq(output).map((name) => {\n            return {\n                label: name, key: name, iconType: \"icon-wenjianjia\", children: mapping[name]\n            }\n        });\n    }, [data]);\n\n    return <Menu {...props} items={menuList}/>;\n});\n\nconst OpenAPIHeader = createWithRemoteLoader({\n    modules: []\n})(({data}) => {\n    return <Row className={style['header-info']} justify=\"space-between\">\n        <Col>{data.info.title}</Col>\n        <Col>版本:{data.info.version}</Col>\n    </Row>\n});\n\nconst OpenAPIDisplay = createWithRemoteLoader({\n    modules: ['components-core:Menu']\n})(({remoteModules, data: originData}) => {\n    const data = useMemo(() => {\n        return parseOpenApiData(originData);\n    }, [originData]);\n    const defaultKey = useMemo(() => {\n        const paths = Object.assign({}, data.paths);\n        const currentPath = Object.keys(paths)[0];\n        if (!currentPath) {\n            return null;\n        }\n        const currentItem = Object.assign({}, paths[currentPath]);\n        const method = Object.keys(currentItem)[0];\n        if (!method) {\n            return null;\n        }\n        return {path: currentPath, method};\n    }, [data]);\n    const [currentApi, onChange] = useState(defaultKey);\n    return <Row gutter={10}>\n        <Col span={4}>\n            <OpenAPIMenu data={data} currentKey={`${currentApi.path}-${currentApi.method.toLowerCase()}`}\n                         onChange={(item, {data}) => {\n                             onChange(data);\n                         }}/>\n        </Col>\n        <Col span={20}>\n            <OpenAPIHeader data={data}/>\n            <OpenAPIDisplayItem data={data} api={currentApi}/>\n        </Col>\n    </Row>\n});\n\nexport const OpenAPIDisplayItem = ({data: originData, api}) => {\n    const data = get(originData, ['paths', api.path, api.method]);\n    return <Space direction=\"vertical\">\n        <Space className={style['path-line']}>\n            <Badge status={data.deprecated ? 'error' : 'success'}/>\n            <div\n                className={classnames(style['request-method'], style[`request-method-${api.method}`])}>{api.method.toUpperCase()}</div>\n            <div className={style['path-line-url']}>{api.path}</div>\n        </Space>\n        <div className={style['api-description']}>\n            <div>{data.summary}</div>\n            <div>{data.description}</div>\n        </div>\n        <Request data={{headers: data.headers, query: data.query, requestBody: data.requestBody}}/>\n        <Responses data={data.responses}/>\n    </Space>;\n};\n\nexport default OpenAPIDisplay;\n"],"names":["transformSchemaToList","_ref","properties","required","Object","keys","map","key","_properties$key","_properties$key2","_properties$key3","id","uniqueId","temp","name","description","type","format","example","includes","_properties$key4","_properties$key5","_properties$key$items","_properties$key$items2","assign","children","isEmpty","items","transformSchemaComponents","target","originData","isPlainObject","hasOwnProperty","schema","schemaPath","$ref","replace","split","get","transform","res","value","Array","isArray","item","inputData","info","servers","openapi","paths","innerRes","innerValue","innerKey","summary","deprecated","tags","operationId","query","push","omit","headers","requestBody","responses","content","statusCode","createWithRemoteLoader","modules","remoteModules","label","data","props","Table","Collapse","_jsx","className","style","defaultActiveKey","sticky","dataSource","getParameterColumns","title","hover","primary","fixed","valueOf","concat","_value$name","toString","DataTable","columns","getDocumentDataColumns","getResponseColumns","_jsxs","Card","size","length","Parameters","rowKey","bordered","SchemaTable","_ref2","_ref3","OpenAPIMenu","Menu","menuList","useMemo","output","mapping","forEach","path","api","method","tag","_Fragment","classnames","toUpperCase","toLowerCase","uniq","iconType","OpenAPIHeader","Row","justify","Col","version","OpenAPIDisplay","parseOpenApiData","defaultKey","currentPath","currentItem","currentApi","onChange","useState","gutter","span","currentKey","_ref4","OpenAPIDisplayItem","_ref5","Space","direction","Badge","status","Request","Responses"],"sourceRoot":""}