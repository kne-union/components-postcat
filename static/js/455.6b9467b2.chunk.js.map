{"version":3,"file":"static/js/455.6b9467b2.chunk.js","mappings":"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","sources":["components/Env/README.md","components/MainPage/README.md","components/OpenAPIDisplay/README.md","components/PostCat/README.md","components/PostCatLocal/README.md","components/Project/README.md","components/Request/README.md","components/PostCat/index.js","components/PostCatLocal/index.js","components/Project/getColumns.js","components/Project/FormInner.js","components/Project/index.js","components/Request/index.js"],"sourcesContent":["import * as component_1 from '@components/Env';\nimport * as component_2 from '@kne/remote-loader';\nimport * as component_3 from 'lodash';\nconst readmeConfig = {\n    name: `Env`,\n    summary: `<p>环境变量管理</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Env_aa9f9`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default: Env} = _Env;\nconst {createWithRemoteLoader} = remoteLoader;\nconst BaseExample = createWithRemoteLoader({\n    modules: ['components-core:Global@PureGlobal', 'components-core:Layout']\n})(({remoteModules}) => {\n    const [PureGlobal, Layout] = remoteModules;\n    return <PureGlobal preset={{\n        ajax: async (params) => {\n            console.log(params);\n            return {\n                data: {\n                    code: 0, data: {}\n                }\n            };\n        }, apis: {\n            postcat: {\n                getEnvList: {\n                    loader: async () => {\n                        return {\n                            pageData: [{\n                                id: 'prod',\n                                name: 'prod',\n                                label: \"生产环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'test',\n                                name: 'test',\n                                label: \"测试环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'dev',\n                                name: 'dev',\n                                label: \"开发环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }], totalCount: 3\n                        };\n                    }\n                }, doEditEnv: {}, doDeleteEnv: {}, doAddEnv: {}\n            }\n        }\n    }}>\n        <Layout navigation={{isFixed: false}}>\n            <Env data={{id:'123'}}/>\n        </Layout>\n\n    </PureGlobal>;\n});\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_Env\",\n    packageName: \"@components/Env\",\n    component: component_1\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_2\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_3\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_7 from '@components/MainPage';\nimport * as component_8 from '@kne/remote-loader';\nimport * as component_9 from 'lodash';\nimport * as component_10 from 'react-router-dom';\nconst readmeConfig = {\n    name: `MainPage`,\n    summary: `<p>项目主页面</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `MainPage_005f3`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default: MainPage} = _MainPage;\nconst {createWithRemoteLoader} = remoteLoader;\nconst {useLocation} = router;\nconst {getPublicPath} = remoteLoader;\nconst BaseExample = createWithRemoteLoader({\n    modules: ['components-core:Global@PureGlobal', 'components-core:Layout', 'components-core:Global@usePreset']\n})(({remoteModules}) => {\n    const [PureGlobal, Layout, usePreset] = remoteModules;\n    const {ajax} = usePreset();\n    const location = useLocation();\n    const list = location.pathname.split('/');\n    const baseUrl = list.slice(0, list.indexOf('PostCat') + 1).join('/') + '/postcat';\n    return <PureGlobal preset={{\n        ajax: (params) => {\n            if (params.url === getPublicPath('components-postcat') + '/mock/formatApi/openApi.json') {\n                console.log(params);\n                return ajax(params);\n            }\n            return {\n                data: {\n                    code: 0, data: {}\n                }\n            };\n        }, apis: {\n            postcat: {\n                getProjectList: {\n                    loader: async () => {\n                        return {\n                            pageData: [{\n                                id: 'prod',\n                                name: 'prod',\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'test',\n                                name: 'test',\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'dev', name: 'dev', description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }], totalCount: 3\n                        };\n                    }\n                }, getProjectDetail: {\n                    loader: async () => {\n                        return {\n                            id: 'prod', name: '测试项目', description: \"我是描述我是描述我是描述我是描述我是描述我是描述\"\n                        };\n                    }\n                }, getOpenApiDoc: {\n                    url: getPublicPath('components-postcat') + '/mock/formatApi/openApi.json',\n                    transformResponse: ({data}) => {\n                        return {data: {code: 200, results: data}};\n                    }\n                }, doEditProject: {}, doDeleteProject: {}, doAddProject: {}, getEnvList: {\n                    loader: async () => {\n                        return {\n                            pageData: [{\n                                id: 'prod',\n                                name: 'prod',\n                                label: \"生产环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'test',\n                                name: 'test',\n                                label: \"测试环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'dev',\n                                name: 'dev',\n                                label: \"开发环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }], totalCount: 3\n                        };\n                    }\n                }, doEditEnv: {}, doDeleteEnv: {}, doAddEnv: {}\n            }\n        }\n    }}>\n        <Layout navigation={{isFixed: false}}>\n            <MainPage menuFixed={false} baseUrl={baseUrl}/>\n        </Layout>\n\n    </PureGlobal>;\n});\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_MainPage\",\n    packageName: \"@components/MainPage\",\n    component: component_7\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_8\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_9\n},{\n    name: \"router\",\n    packageName: \"react-router-dom\",\n    component: component_10\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_4 from '@components/OpenAPIDisplay';\nimport * as component_5 from '@kne/react-fetch';\nimport * as component_6 from '@kne/remote-loader';\nconst readmeConfig = {\n    name: `OpenAPIDisplay`,\n    summary: `<p>用于显示open api格式文档</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: true,\n        className: `OpenAPIDisplay_9bf15`,\n        style: ``,\n        list: [{\n    title: `Format Response`,\n    description: `格式化OpenApi，显示文档和编辑`,\n    code: `const {default: OpenAPIDisplay, parseOpenApiData} = _OpenAPIDisplay;\nconst {createWithFetch} = reactFetch;\nconst {getPublicPath} = remoteLoader;\nconst BaseExample = createWithFetch({\n    url: getPublicPath('components-postcat') + '/mock/formatApi/openApi.json', transformResponse: ({data}) => {\n        return {data: {code: 200, results: data}};\n    }\n})(({data}) => {\n    console.log(parseOpenApiData(data));\n    return <OpenAPIDisplay data={data}/>;\n});\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_OpenAPIDisplay\",\n    packageName: \"@components/OpenAPIDisplay\",\n    component: component_4\n},{\n    name: \"reactFetch\",\n    packageName: \"@kne/react-fetch\",\n    component: component_5\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_6\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_11 from '@components/PostCat';\nimport * as component_12 from '@kne/remote-loader';\nimport * as component_13 from 'lodash';\nimport * as component_14 from 'react-router-dom';\nconst readmeConfig = {\n    name: `PostCat`,\n    summary: `<p>用于管理接口和mock接口数据的应用</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `PostCat_68d68`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default: PostCat} = _PostCat;\nconst {createWithRemoteLoader} = remoteLoader;\nconst {useLocation, Routes, Route, Navigate} = router;\nconst {getPublicPath} = remoteLoader;\nconst BaseExample = createWithRemoteLoader({\n    modules: ['components-core:Global@PureGlobal', 'components-core:Layout', 'components-core:Global@usePreset']\n})(({remoteModules}) => {\n    const [PureGlobal, Layout, usePreset] = remoteModules;\n    const {ajax} = usePreset();\n    const location = useLocation();\n    const list = location.pathname.split('/');\n    const baseUrl = list.slice(0, list.indexOf('PostCat') + 1).join('/') + '/postcat';\n    return <PureGlobal preset={{\n        ajax: (params) => {\n            if (params.url === getPublicPath('components-postcat') + '/mock/formatApi/openApi.json') {\n                console.log(params);\n                return ajax(params);\n            }\n            return {\n                data: {\n                    code: 0, data: {}\n                }\n            };\n        }, apis: {\n            postcat: {\n                getProjectList: {\n                    loader: async () => {\n                        return {\n                            pageData: [{\n                                id: 'prod',\n                                name: 'prod',\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'test',\n                                name: 'test',\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'dev', name: 'dev', description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }], totalCount: 3\n                        };\n                    }\n                }, getProjectDetail: {\n                    loader: async () => {\n                        return {\n                            id: 'prod', name: '测试项目', description: \"我是描述我是描述我是描述我是描述我是描述我是描述\"\n                        };\n                    }\n                }, getOpenApiDoc: {\n                    url: getPublicPath('components-postcat') + '/mock/formatApi/openApi.json',\n                    transformResponse: ({data}) => {\n                        return {data: {code: 200, results: data}};\n                    }\n                }, doEditProject: {}, doDeleteProject: {}, doAddProject: {}, getEnvList: {\n                    loader: async () => {\n                        return {\n                            pageData: [{\n                                id: 'prod',\n                                name: 'prod',\n                                label: \"生产环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'test',\n                                name: 'test',\n                                label: \"测试环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'dev',\n                                name: 'dev',\n                                label: \"开发环境\",\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }], totalCount: 3\n                        };\n                    }\n                }, doEditEnv: {}, doDeleteEnv: {}, doAddEnv: {}\n            }\n        }\n    }}>\n        <Layout navigation={{isFixed: false}}>\n            <Routes>\n                <Route path={baseUrl + '/*'} element={<PostCat baseUrl={baseUrl} menuFixed={false}/>}/>\n                <Route path=\"*\" element={<Navigate to={baseUrl}/>}/>\n            </Routes>\n        </Layout>\n\n    </PureGlobal>;\n});\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_PostCat\",\n    packageName: \"@components/PostCat\",\n    component: component_11\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_12\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_13\n},{\n    name: \"router\",\n    packageName: \"react-router-dom\",\n    component: component_14\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_15 from '@components/PostCatLocal';\nimport * as component_16 from '@kne/remote-loader';\nimport * as component_17 from 'lodash';\nimport * as component_18 from 'react-router-dom';\nconst readmeConfig = {\n    name: `PostCatLocal`,\n    summary: `<p>PostCat的浏览器本地存储版本</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `PostCatLocal_8abe4`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default: PostCatLocal} = _PostCatLocal;\nconst {createWithRemoteLoader} = remoteLoader;\nconst {useLocation, Routes, Route, Navigate} = router;\nconst BaseExample = createWithRemoteLoader({\n    modules: ['components-core:Layout']\n})(({remoteModules}) => {\n    const [Layout] = remoteModules;\n    const location = useLocation();\n    const list = location.pathname.split('/');\n    const baseUrl = list.slice(0, list.indexOf('PostCatLocal') + 1).join('/');\n    return <Layout navigation={{isFixed: false}}>\n        <Routes>\n            <Route path={baseUrl + '/*'} element={<PostCatLocal baseUrl={baseUrl} menuFixed={false}/>}/>\n            <Route path=\"*\" element={<Navigate to={baseUrl}/>}/>\n        </Routes>\n    </Layout>;\n});\n\nrender(<BaseExample/>);\n\n`,\n    scope: [{\n    name: \"_PostCatLocal\",\n    packageName: \"@components/PostCatLocal\",\n    component: component_15\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_16\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_17\n},{\n    name: \"router\",\n    packageName: \"react-router-dom\",\n    component: component_18\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_19 from '@components/Project';\nimport * as component_20 from '@kne/remote-loader';\nimport * as component_21 from 'lodash';\nconst readmeConfig = {\n    name: `Project`,\n    summary: `<p>项目管理页</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Project_9e727`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default: Project} = _Project;\nconst {createWithRemoteLoader} = remoteLoader;\nconst BaseExample = createWithRemoteLoader({\n    modules: ['components-core:Global@PureGlobal', 'components-core:Layout']\n})(({remoteModules}) => {\n    const [PureGlobal, Layout] = remoteModules;\n    return <PureGlobal preset={{\n        ajax: async (params) => {\n            console.log(params);\n            return {\n                data: {\n                    code: 0, data: {}\n                }\n            };\n        }, apis: {\n            postcat: {\n                getProjectList: {\n                    loader: async () => {\n                        return {\n                            pageData: [{\n                                id: 'prod',\n                                name: 'prod',\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'test',\n                                name: 'test',\n                                description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }, {\n                                id: 'dev', name: 'dev', description: \"我是描述我是描述我是描述我是描述我是描述我是描述\",\n                            }], totalCount: 3\n                        };\n                    }\n                }, doEditProject: {}, doDeleteProject: {}, doAddProject: {}\n            }\n        }\n    }}>\n        <Layout navigation={{isFixed: false}}>\n            <Project/>\n        </Layout>\n\n    </PureGlobal>;\n});\n\nrender(<BaseExample/>);\n\n\n`,\n    scope: [{\n    name: \"_Project\",\n    packageName: \"@components/Project\",\n    component: component_19\n},{\n    name: \"remoteLoader\",\n    packageName: \"@kne/remote-loader\",\n    component: component_20\n},{\n    name: \"lodash\",\n    packageName: \"lodash\",\n    component: component_21\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import * as component_22 from '@components/Request';\nconst readmeConfig = {\n    name: `Request`,\n    summary: `<p>请求管理</p>`,\n    \n    \n    api: `<table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>说明</th>\n<th>类型</th>\n<th>默认值</th>\n</tr>\n</thead>\n</table>`,\n    example: {\n        isFull: false,\n        className: `Request_15c2d`,\n        style: ``,\n        list: [{\n    title: `这里填写示例标题`,\n    description: `这里填写示例说明`,\n    code: `const {default:Request} = _Request;\nconst BaseExample = ()=>{\n    return <Request />;\n};\n\nrender(<BaseExample />);\n\n`,\n    scope: [{\n    name: \"_Request\",\n    packageName: \"@components/Request\",\n    component: component_22\n}]\n}]\n    }\n};\nexport default readmeConfig;\n","import {Routes, Route, Navigate} from 'react-router-dom';\nimport {Provider} from '../../commons/context';\nimport Project from '@components/Project';\nimport MainPage from \"@components/MainPage\";\n\nconst PostCat = ({baseUrl, menuFixed, ...props}) => {\n    return <Provider value={{baseUrl, ...props}}>\n        <Routes>\n            <Route index element={<Project menuFixed={menuFixed}/>}/>\n            <Route path=\":id\" element={<MainPage menuFixed={menuFixed}/>}/>\n            <Route path=\":id/*\" element={<MainPage menuFixed={menuFixed}/>}/>\n            <Route path=\"*\" element={<Navigate to={baseUrl}/>}/>\n        </Routes>\n    </Provider>;\n};\n\nPostCat.defaultProps = {\n    baseUrl: '/'\n};\n\nexport default PostCat;\n","import PostCat from '@components/PostCat';\nimport {v4 as uuidv4} from 'uuid';\nimport {createInstance} from \"localforage\";\nimport {createWithRemoteLoader} from \"@kne/remote-loader\";\n\nconst projectStore = createInstance({name: 'postcat-project'}),\n    openApiDocStore = createInstance({name: 'postcat-openapi-doc'}), envStore = createInstance({name: 'postcat-env'});\n\nconst PostCatLocal = createWithRemoteLoader({\n    modules: ['components-core:File@downloadBlobFile']\n})(({remoteModules, ...props}) => {\n    const [downloadBlobFile] = remoteModules;\n    return <PostCat {...props} apis={{\n        doAddProject: {\n            loader: async ({data}) => {\n                const id = uuidv4();\n                const project = Object.assign({}, data, {id});\n                await projectStore.setItem(id, project);\n                return project;\n            }\n        }, getProjectList: {\n            loader: async () => {\n                const ids = await projectStore.keys();\n                const pageData = await Promise.all(ids.map((id) => projectStore.getItem(id)));\n                return {\n                    pageData, totalCount: pageData.length\n                };\n            }\n        }, doDeleteProject: {\n            loader: async ({data}) => {\n                const project = await projectStore.getItem(data.id);\n                if (!project) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n                project.openApiDocId && await openApiDocStore.removeItem(project.openApiDocId);\n                project.envIds && await Promise.all(project.envIds.map((envId) => envStore.removeItem(envId)));\n                await projectStore.removeItem(data.id);\n\n                return {};\n            }\n        }, doEditProject: {\n            loader: async ({data}) => {\n                const project = await projectStore.getItem(data.id);\n                if (!project) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n\n                const newProject = Object.assign({}, project, data);\n\n                await projectStore.setItem(newProject.id, newProject);\n\n                return newProject;\n            }\n        }, getProjectDetail: {\n            loader: async ({params}) => {\n                return await projectStore.getItem(params.id);\n            }\n        }, getOpenApiDoc: {\n            loader: async ({params}) => {\n                const project = await projectStore.getItem(params.id);\n                if (!project.openApiDocId) {\n                    return null;\n                }\n                return openApiDocStore.getItem(project.openApiDocId);\n            }\n        }, doAddOpenApiDoc: {\n            loader: async ({data: {projectId, ...data}}) => {\n                const project = await projectStore.getItem(projectId);\n                if (!project) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n                const id = uuidv4();\n                const doc = Object.assign({}, data, {id});\n                await openApiDocStore.setItem(id, doc);\n                await projectStore.setItem(project.id, Object.assign({}, project, {openApiDocId: id}));\n                return doc;\n            }\n        }, doEditOpenApiDoc: {\n            loader: async ({data}) => {\n                const doc = await openApiDocStore.getItem(data.id);\n                if (!doc) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n\n                const newDoc = Object.assign({}, doc, data);\n\n                await openApiDocStore.setItem(doc.id, newDoc);\n\n                return newDoc;\n            }\n        }, getEnvList: {\n            loader: async ({params: {projectId}}) => {\n                const ids = await envStore.keys();\n                const pageData = (await Promise.all(ids.map((id) => envStore.getItem(id)))).filter((item) => item.projectId === projectId);\n                return {\n                    pageData, totalCount: pageData.length\n                };\n            }\n        }, doAddEnv: {\n            loader: async ({data}) => {\n                const project = await projectStore.getItem(data.projectId);\n                if (!project) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n                const id = uuidv4();\n                const env = Object.assign({}, data, {id});\n                await envStore.setItem(id, env);\n                if (!project.envIds) {\n                    project.envIds = [];\n                }\n                project.envIds.push(id);\n                await projectStore.setItem(project.id, Object.assign({}, project));\n                return env;\n            }\n        }, doEditEnv: {\n            loader: async ({data}) => {\n                const env = await envStore.getItem(data.id);\n                if (!env) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n\n                const newEnv = Object.assign({}, env, data);\n\n                await envStore.setItem(newEnv.id, newEnv);\n\n                return newEnv;\n            }\n        }, doDeleteEnv: {\n            loader: async ({data}) => {\n                const env = await envStore.getItem(data.id);\n                if (!env) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n                await envStore.removeItem(data.id);\n                return null;\n            }\n        }, excludeApis: {\n            loader: async ({params: {projectId}}) => {\n                const project = await projectStore.getItem(projectId);\n                if (!project.openApiDocId) {\n                    throw new Error('数据已过期清刷新页面后重试');\n                }\n                const apis = await openApiDocStore.getItem(project.openApiDocId);\n                if (!(apis && apis.content && apis.content.paths && Object.keys(apis.content.paths).length > 0)) {\n                    throw new Error('没有可导出的API');\n                }\n                await downloadBlobFile(new Blob([JSON.stringify(apis.content)], {type: \"text/plain\"}), `openapi-${apis.id}.json`);\n                return null;\n            }\n        }, excludeProject: {\n            loader: async ({params: {projectId}}) => {\n                const project = await projectStore.getItem(projectId);\n                if (project.openApiDocId) {\n                    project.openApiDoc = await openApiDocStore.getItem(project.openApiDocId);\n                }\n                if (project.envIds && project.envIds.length > 0) {\n                    project.envs = await Promise.all(project.envIds.map((envId) => envStore.getItem(envId)));\n                }\n                delete project['openApiDocId'];\n                delete project['envIds'];\n                await downloadBlobFile(new Blob([JSON.stringify(project)], {type: \"text/plain\"}), `project-${project.id}.json`);\n                return null;\n            }\n        }, includeProject: {\n            loader: async ({data: {projectId, data}}) => {\n                const project = await projectStore.getItem(projectId);\n                // 先清空之前的project数据\n                project.openApiDocId && await openApiDocStore.removeItem(project.openApiDocId);\n                project.envIds && await Promise.all(project.envIds.map((envId) => envStore.removeItem(envId)));\n\n                const newProject = {\n                    id: projectId, name: project.name, description: data.description\n                };\n\n                if (data.openApiDoc && data.openApiDoc.content && data.openApiDoc.content.paths && Object.keys(data.openApiDoc.content.paths).length > 0) {\n                    const id = uuidv4();\n                    newProject.openApiDocId = id;\n                    await openApiDocStore.setItem(id, {id, content: data.openApiDoc.content});\n                }\n\n                if (data.envs && Array.isArray(data.envs) && data.envs.length > 0) {\n                    project.envIds = await Promise.all(data.envs.map(async (item) => {\n                        const id = uuidv4();\n                        await envStore.setItem(id, Object.assign({}, item, {id, projectId}));\n                        return id;\n                    }));\n                }\n\n                await projectStore.setItem(projectId, newProject);\n\n                return newProject;\n            }\n        }\n    }}/>;\n});\n\nexport default PostCatLocal;\n","const getColumns = () => [{\n    name: \"name\", title: \"项目名\", type: \"mainInfo\", hover: false, primary: false, fixed: \"left\"\n}, {\n    name: \"description\", title: \"描述\", type: \"description\"\n}];\n\nexport default getColumns;\n","import {createWithRemoteLoader} from '@kne/remote-loader';\n\nconst FormInner = createWithRemoteLoader({\n    modules: ['components-core:FormInfo']\n})(({remoteModules}) => {\n    const [FormInfo] = remoteModules;\n\n    const {Input, TextArea} = FormInfo.fields;\n\n    return <FormInfo column={1} list={[<Input name=\"name\" label=\"项目名\" rule=\"REQ LEN-0-50\"/>,\n        <TextArea name=\"description\" label=\"描述\"/>]}/>\n});\n\nexport default FormInner;\n","import {createWithRemoteLoader} from \"@kne/remote-loader\";\nimport {useNavigate, useLocation} from 'react-router-dom';\nimport {useRef} from 'react';\nimport {Space, Button, App} from \"antd\";\nimport getColumns from './getColumns';\nimport FormInner from './FormInner';\nimport {useProps} from '../../commons/context';\n\nconst Project = createWithRemoteLoader({\n    modules: ['components-core:Layout@TablePage', 'components-core:Global@usePreset', 'FormInfo@useFormModal']\n})(({remoteModules, ...props}) => {\n    const [TablePage, usePreset, useFormModal] = remoteModules;\n    const {apis: propsApis} = useProps();\n    const {ajax, apis} = usePreset();\n    const formModal = useFormModal();\n    const {getProjectList, doAddProject, doEditProject, doDeleteProject} = Object.assign({}, apis.postcat, propsApis);\n    const {message} = App.useApp();\n    const ref = useRef();\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    return <TablePage {...Object.assign({}, getProjectList)} ref={ref} name=\"env\" page={{\n        ...props, title: \"项目\", titleExtra: <Space>\n            <Button type=\"primary\" onClick={() => {\n                const formModalApi = formModal({\n                    title: \"添加项目\", size: 'small', formProps: {\n                        onSubmit: async (formData) => {\n                            const {data: resData} = await ajax(Object.assign({}, doAddProject, {\n                                data: formData\n                            }));\n\n                            if (resData.code !== 0) {\n                                return;\n                            }\n                            message.success('添加成功');\n                            formModalApi.close();\n                            ref.current.reload();\n                        }\n                    }, children: <FormInner/>\n                });\n            }}>添加</Button>\n        </Space>\n    }} columns={[...getColumns(), {\n        name: \"options\", title: \"操作\", type: \"options\", fixed: \"right\", valueOf: (item) => [{\n            children: '查看', onClick: () => {\n                navigate(`${location.pathname}/${item.id}`)\n            }\n        }, {\n            onClick: () => {\n                const formModalApi = formModal({\n                    title: \"编辑项目\", size: 'small', formProps: {\n                        data: item, onSubmit: async (formData) => {\n                            const {data: resData} = await ajax(Object.assign({}, doEditProject, {\n                                data: Object.assign({}, formData, {id: item.id})\n                            }));\n                            if (resData.code !== 0) {\n                                return;\n                            }\n\n                            message.success('修改成功');\n                            formModalApi.close();\n                            ref.current.reload();\n                        }\n                    }, children: <FormInner/>\n                });\n            }, children: \"编辑\"\n        }, {\n            onClick: async () => {\n                const {data: resData} = await ajax(Object.assign({}, doDeleteProject, {\n                    data: {id: item.id}\n                }));\n                if (resData.code !== 0) {\n                    return;\n                }\n\n                message.success('删除成功');\n                ref.current.reload();\n            }, children: \"删除\"\n        }]\n    }]}/>;\n});\n\nexport default Project;\n","import style from './style.module.scss';\n\nconst Request = () => {\n    return <div>unleash creativity</div>;\n};\n\nexport default Request;\n"],"names":["name","summary","api","example","isFull","className","style","list","title","description","code","scope","packageName","component","PostCat","_ref","baseUrl","menuFixed","props","_jsx","Provider","value","children","_jsxs","Routes","Route","index","element","Project","path","MainPage","Navigate","to","defaultProps","projectStore","createInstance","openApiDocStore","envStore","createWithRemoteLoader","modules","remoteModules","downloadBlobFile","apis","doAddProject","loader","async","data","_ref2","id","uuidv4","project","Object","assign","setItem","getProjectList","ids","keys","pageData","Promise","all","map","getItem","totalCount","length","doDeleteProject","_ref3","Error","openApiDocId","removeItem","envIds","envId","doEditProject","_ref4","newProject","getProjectDetail","params","_ref5","getOpenApiDoc","_ref6","doAddOpenApiDoc","projectId","_ref7","doc","doEditOpenApiDoc","_ref8","newDoc","getEnvList","_ref9","filter","item","doAddEnv","_ref10","env","push","doEditEnv","_ref11","newEnv","doDeleteEnv","_ref12","excludeApis","_ref13","content","paths","Blob","JSON","stringify","type","concat","excludeProject","_ref14","openApiDoc","envs","includeProject","_ref15","Array","isArray","getColumns","hover","primary","fixed","FormInfo","Input","TextArea","fields","column","label","rule","TablePage","usePreset","useFormModal","propsApis","useProps","ajax","formModal","postcat","message","App","useApp","ref","useRef","navigate","useNavigate","location","useLocation","page","titleExtra","Space","Button","onClick","formModalApi","size","formProps","onSubmit","resData","formData","success","close","current","reload","FormInner","columns","valueOf","pathname","Request"],"sourceRoot":""}